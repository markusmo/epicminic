fun

0	1	0	0	1	
0	0	1	0	0	
0	0	0	1	0	
0	0	0	0	0	
0	0	0	0	0	



B0
{
	int z;
	if (z)
}
Predecessor: 
Successor: B1, B4, 

B1
{
	if (z)
}
Predecessor: B0, 
Successor: B2, B5, 

B2
{
	z=5;
}
Predecessor: B1, 
Successor: B3, 

B3
{
}
Predecessor: B2, 
Successor: 

B4
{
	z=-5;
}
Predecessor: B0, 
Successor: B5, 

B5
{
	y=5;
}
Predecessor: B1, B4, 
Successor: 

B6
{
}
Predecessor: 
Successor: B1, B4, 

B7
{
}
Predecessor: 
Successor: B1, B4, 

B8
{
}
Predecessor: 
Successor: B1, B4, 

B9
{
}
Predecessor: 
Successor: B1, B4, 

B10
{
}
Predecessor: 
Successor: B1, B4, 

B11
{
}
Predecessor: 
Successor: B1, B4, 

B12
{
}
Predecessor: 
Successor: B1, B4, 

B13
{
}
Predecessor: 
Successor: B1, B4, 

B14
{
}
Predecessor: 
Successor: B1, B4, 

B15
{
}
Predecessor: 
Successor: B1, B4, 

B16
{
}
Predecessor: 
Successor: B1, B4, 

B17
{
}
Predecessor: 
Successor: B1, B4, 

B18
{
}
Predecessor: 
Successor: B1, B4, 

B19
{
}
Predecessor: 
Successor: B1, B4, 

B20
{
}
Predecessor: 
Successor: B1, B4, 

B21
{
}
Predecessor: 
Successor: B1, B4, 

B22
{
}
Predecessor: 
Successor: B1, B4, 

B23
{
}
Predecessor: 
Successor: B1, B4, 

B24
{
}
Predecessor: 
Successor: B1, B4, 

B25
{
}
Predecessor: 
Successor: B1, B4, 

B26
{
}
Predecessor: 
Successor: B1, B4, 

B27
{
}
Predecessor: 
Successor: B1, B4, 

B28
{
}
Predecessor: 
Successor: B1, B4, 

B29
{
}
Predecessor: 
Successor: B1, B4, 

B30
{
}
Predecessor: 
Successor: B1, B4, 

B31
{
}
Predecessor: 
Successor: B1, B4, 

B32
{
}
Predecessor: 
Successor: B1, B4, 

B33
{
}
Predecessor: 
Successor: B1, B4, 

B34
{
}
Predecessor: 
Successor: B1, B4, 

B35
{
}
Predecessor: 
Successor: B1, B4, 

B36
{
}
Predecessor: 
Successor: B1, B4, 

B37
{
}
Predecessor: 
Successor: B1, B4, 

B38
{
}
Predecessor: 
Successor: B1, B4, 

B39
{
}
Predecessor: 
Successor: B1, B4, 

B40
{
}
Predecessor: 
Successor: B1, B4, 

B41
{
}
Predecessor: 
Successor: B1, B4, 

B42
{
}
Predecessor: 
Successor: B1, B4, 

B43
{
}
Predecessor: 
Successor: B1, B4, 

B44
{
}
Predecessor: 
Successor: B1, B4, 

B45
{
}
Predecessor: 
Successor: B1, B4, 

B46
{
}
Predecessor: 
Successor: B1, B4, 

B47
{
}
Predecessor: 
Successor: B1, B4, 

B48
{
}
Predecessor: 
Successor: B1, B4, 

B49
{
}
Predecessor: 
Successor: B1, B4, 

B50
{
}
Predecessor: 
Successor: B1, B4, 

B51
{
}
Predecessor: 
Successor: B1, B4, 

B52
{
}
Predecessor: 
Successor: B1, B4, 

B53
{
}
Predecessor: 
Successor: B1, B4, 

B54
{
}
Predecessor: 
Successor: B1, B4, 

B55
{
}
Predecessor: 
Successor: B1, B4, 

B56
{
}
Predecessor: 
Successor: B1, B4, 

B57
{
}
Predecessor: 
Successor: B1, B4, 

B58
{
}
Predecessor: 
Successor: B1, B4, 

B59
{
}
Predecessor: 
Successor: B1, B4, 

B60
{
}
Predecessor: 
Successor: B1, B4, 

B61
{
}
Predecessor: 
Successor: B1, B4, 

B62
{
}
Predecessor: 
Successor: B1, B4, 

B63
{
}
Predecessor: 
Successor: B1, B4, 

